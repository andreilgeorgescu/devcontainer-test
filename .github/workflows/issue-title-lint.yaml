name: PR Title Linter

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions: read-all

jobs:
  lint-pr-title:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: pip install requests PyGithub

      - name: Lint PR Title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -c "import os; import re; from github import Github;\
          g = Github(os.getenv('GITHUB_TOKEN'));\
          repo_name = os.getenv('GITHUB_REPOSITORY');\
          pr_number = os.getenv('GITHUB_EVENT_PATH').split('/')[-1];\
          repo = g.get_repo(repo_name);\
          pr = repo.get_pull(int(pr_number));\
          title_regex = r'^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-z0-9-]+\))?:\s[a-z0-9\s-]+[a-z0-9\s]\n\nResolves #\d+$';\
          if not re.match(title_regex, pr.title):\
              print('PR title does not match the required format');\
              exit(1);\
          issue_number = re.search(r'Resolves #(\d+)$', pr.title).group(1);\
          issue = repo.get_issue(int(issue_number));\
          if pr.title != issue.title:\
              print('PR title does not match the issue title');\
              exit(1);\
          print('PR title is valid')"
